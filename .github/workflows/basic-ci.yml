name: Basic CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4.3.1
        with:
          name: next-build
          path: .next/
          retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run security audit
        run: |
          npm audit --audit-level high --json > audit-results.json || true
          if [ -s audit-results.json ]; then
            echo "Security vulnerabilities found - check output"
            cat audit-results.json
          fi
        continue-on-error: true
      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4.3.1
        with:
          name: security-audit
          path: audit-results.json
          retention-days: 30

  deploy:
    needs: [lint, build, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.4
        with:
          name: next-build
          path: .next/
      - name: Deploy to production
        run: |
          echo "🚀 Deploying to production..."
          # TODO: Legg til dine deployment-kommandoer her
          echo "✅ Deployment completed successfully"
      - name: Create release tag
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          VERSION=$(node -p "require('./package.json').version")
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"

  notify:
    needs: [lint, build, security-scan, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create pipeline summary
        run: |
          echo "## 📊 Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Lint**: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Security**: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deploy**: ${{ needs.deploy.result }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.deploy.result }}" == "success" ]]; then
            echo "🎉 **Deployment successful**" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy.result }}" == "failure" ]]; then
            echo "❌ **Deployment failed - check logs**" >> $GITHUB_STEP_SUMMARY
          fi 